@model PeriodAid.Models.Subject
@using PeriodAid.Models;
@{
    ViewBag.ImgUrl = @ViewBag.img;
    ViewBag.Title = "Task_Detail";
    Layout = "~/Views/Shared/_TaskManagementLayout.cshtml";
}
<!--The Second Nav-->
<div class="navbar-default tm_task-navbar">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <ol class="breadcrumb  navbar-breadcrumb">
                <li><a href="/TaskManagement/Index">主页</a></li>
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" id="SubjectName" data-id="@Model.Id" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@Html.Encode(Model.SubjectTitle)@*<span class="caret"></span>*@</a>
                   @*<ul class="dropdown-menu dropdown-menu-list">
                      <li><a href="#">Action</a></li>
                      <li><a href="#">Another action</a></li>
                      <li><a href="#">Something else here</a></li>
                      <li role="separator" class="divider"></li>
                      <li><a href="#">Separated link</a></li>
                      <li role="separator" class="divider"></li>
                      <li><a href="#">One more separated link</a></li>
                 </ul>*@
                </li>
            </ol>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
            <ul class="nav navbar-nav navbar-underline">
                <li><a href="/TaskManagement/Subject_Detail?SubjectId=@Model.Id" class="active">进度</a></li>
                <li><a href="#">日程</a></li>
                    <li><a href="/TaskManagement/Subject_Files?SubjectId=@Model.Id">文件</a></li>
            </ul>
            <ul class="nav navbar-nav navbar-right navbar-border">
                @*<li><a href="#" id="users-btn"><i class="fa fa-users color-blue" aria-hidden="true"></i>&nbsp;<span class="users-num">20</span></a></li>*@
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" id="btn_show_subject_panel"><i class="fa fa-bars color-blue" aria-hidden="true"></i>&nbsp;菜单</a>
                </li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</div>
<!--The Second Nav End-->
<!--Procedure Content-->
<div class="tm_panel-wrap tm_add_panel_hide" id="panel-wrap" data-sid="@Model.Id">
    <div class="tm_control_panel_show" id="btn_show_add_panel">展开</div>
    <div class="tm_panel-container" id="tm_panel-container">
        <div class="tm_panel-item text-center tm_panel-item-add" id="tm_panel-item-add">
            <div class="color-gray btn-get-form" id="add-panel-list">
                <div class="add-btn" id="btn_add-panel"><i class="fa fa-plus-circle" aria-hidden="true">&nbsp;&nbsp;&nbsp;新建列表</i></div>
                <div class="tm_control_panel_hide" id="btn_hide_add_panel"><span>收起</span></div>
            </div>
            <div id="add-panel-write" class="tm_procedureform-area hidden">
                @using (Html.BeginForm("CreateProcedure", "TaskManagement", FormMethod.Post, new { @id = "add_procedure_form", @class = "validate-form padding-10" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary()
                    @Html.HiddenFor(m => m.TemplateId)
                    <input type="hidden" id="SubjectId" name="SubjectId" value="@Model.Id"/>
                    <div class="form-group">
                        <input type="text" class="form-control" id="ProcedureTitle" placeholder="过程列表标题" name="ProcedureTitle">
                    </div>
                    <div class="text-right">
                        <a class="btn btn-default" id="cancel-panel-write">取消</a>
                        <a class="btn btn-blue" id="create-procedure-panel">确定</a>
                    </div>
                }
            </div>            
        </div>
        @foreach (var procedure in ViewBag.sortprocedure)
        {
            <div class="tm_panel-item ajax-procedure" data-procedureid="@procedure.Id">
            </div>
        }
    </div>
</div>
<!--Procedure Content End-->
<!-- Modal Edit-Assignment-->
<div class="modal fade tm_modal" id="Edit-Assignment" role="dialog" aria-labelledby="Edit-AssignmentLabel" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
        </div>
    </div>

</div>
<!-- Modal Edit-Assignment End-->
<!-- Modal Add-Collaborator-->
<div class="modal fade" id="Add-Collaborator" tabindex="-1" role="dialog" aria-labelledby="Add-CollaboratorLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
        </div>
    </div>
</div>
<!-- Modal Add-Collaborator End-->

<!--panel Menu-->
<div class="tm_subject_panel" id="tm_subject_panel">
    
</div>
<!--panel Menu End-->
@section scripts{
    <script>
        $("#btn_show_add_panel").on("click", function () {
            $("#panel-wrap").removeClass("tm_add_panel_hide");
            $("#tm_panel-container").scrollLeft("0")
        });
        $("#btn_hide_add_panel").on("click", function () {
            $("#panel-wrap").addClass("tm_add_panel_hide");
        })

        //项目菜单操作
        $("#btn_show_subject_panel").on("click", function () {
            if ($("#my-app").hasClass("tm_subject_active")) {
                $("#my-app").removeClass("tm_subject_active")
            } else {
                $.ajax({
                    url: "/TaskManagement/SubjectMenupanelPartial",
                    data: {
                        SubjectId: $("#panel-wrap").attr("data-sid")
                    },
                    success: function (data) {
                        $("#tm_subject_panel").html(data);
                    },
                    error: function (data) {
                        ErrorAlert("操作失败。");
                    }
                })
                $("#my-app").addClass("tm_subject_active")
            }
        })
        //加载procedure
        $(".ajax-procedure").each(function () {
            var ProcedureId = $(this).attr("data-procedureid");
            var that = $(this);
            GetProcedure(ProcedureId, $("#panel-wrap").attr("data-sid"), that);
        });

        //排序
        var al = document.getElementById('tm_panel-container');
        var sortable = new Sortable(al, {
            animation: 150,
            draggable: ".ajax-procedure",
            handle: ".tm_panel-header",
            filter: ".tm_panel-item-add",
            dragClass: "sortable-drag",
            ghostClass: "sortable-ghost",
            preventOnFilter: false,
            scrollSpeed: 10,
            onEnd: function (evt) {
                var sortobject = [];
                $(".ajax-procedure").each(function (index) {
                    var obj = new Object();
                    obj.procedureid = parseInt($(this).attr("data-procedureid"));
                    obj.sort = index;
                    sortobject.push(obj)
                });
                var json = {};
                for (var i = 0; i < sortobject.length; i++) {
                    json[i] = sortobject[i];
                }
                $.ajax({
                    url: "/TaskManagement/SortProcedure",
                    type: "post",
                    data: {
                        ProcedureJson: JSON.stringify(sortobject),
                        SubjectId: $("#panel-wrap").attr("data-sid")

                    },
                    success: function (data) {
                        if (data.result == "SUCCESS") {
                        } else {
                            ErrorAlert(data.errmsg);
                        }
                    },
                    error: function () {
                        ErrorAlert("操作失败。")
                    }
                })
            },

        });
        //任务添加窗口
        $("#panel-wrap").on("click", ".btn-get-assignmentform", function () {
            $(".btn-get-assignmentform").removeClass("hidden");
            $(".tm_assignmentform-area").html("");
            GetAssignmentForm($(this).attr("data-pid"), $("#panel-wrap").attr("data-sid"), $(this).parent().find(".tm_assignmentform-area"));
            $(this).addClass("hidden");
        });
        //清除任务添加窗口
        $("#panel-wrap").on("click", "#cancel-create-assignment", function () {
            $(".btn-get-assignmentform").removeClass("hidden");
            $(".tm_assignmentform-area").html("");
        });
        //任务完成
        $("#panel-wrap").on("click", ".assignment_comfirm_finish", function (event) {
            ComfirmFinishAssignment($(this).parent().parent().parent().attr("data-aid"), function (data) {
                if (data.result == "SUCCESS") {
                    GetAssignment(data.Id, $("#panel-wrap").attr("data-sid"), $(".ajax-procedure[data-procedureid=" + data.Id + "]").find(".tm_panel-body"));
                    $.ajax({
                        url: "/TaskManagement/GetProcedureJsonInfo",
                        type: "post",
                        data: {
                            SubjectId: $("#panel-wrap").attr("data-sid")
                        },
                        success: function (data) {
                            if (data.result == "SUCCESS") {
                                var len = data.data.length;
                                $(".ajax-procedure").each(function () {
                                    for (i = 0; i < len; i++) {
                                        if (data.data[i].ProcedureId == $(this).attr("data-procedureid")) {
                                            $(this).find(".total-num").html(data.data[i].TotalNum)
                                            $(this).find(".num").html(data.data[i].FinishNum)
                                        }
                                    }
                                })
                            } else {
                                ErrorAlert("请求失败。");
                            }
                        },
                        error: function (data) {
                            ErrorAlert("请求失败。");
                        }
                    })
                } else {
                    ErrorAlert(data.errmsg);
                }
            })
            return false;
        });
        //新增过程验证
        $("#add_procedure_form").validate({
            debug: false,
            rules: {
                ProcedureTitle: {
                    required: true,
                    maxlength: 128
                }
            },
            //验证通过的正式提交函数
            submitHandler: function (form) {
                $(form).ajaxSubmit(function (data) {
                    if (data.result == "SUCCESS") {
                        if ($(".ajax-procedure").length == 0) {
                            $(".tm_panel-item-add").after("<div class=\"tm_panel-item ajax-procedure\"" + "data-procedureid=" + data.id + "></div>");
                        } else {
                            $(".ajax-procedure:last").after("<div class=\"tm_panel-item ajax-procedure\"" + "data-procedureid=" + data.id + "></div>");
                        }
                        GetProcedure(data.id, $("#panel-wrap").attr("data-sid"), $(".ajax-procedure:last"));
                        UnimportantAlert("添加过程成功。");
                        controlHidden();
                    } else {
                        ErrorAlert(data.errmsg);
                        controlHidden()
                    }
                })
            },
            errorClass: "has-error",
            //验证失败
            errorPlacement: function (error, element) {
                $("#create-procedure-panel").removeClass("disabled");
            }
        });
        //新增过程
        $("#create-procedure-panel").on("click", function () {
            if (!$(this).hasClass("disabled")) {
                $(this).addClass("disabled")
                $("#add_procedure_form").submit();
            }
        })
        //任务列表删除
        $("#panel-wrap").on("click", ".btn-del-procedure", function () {
            Delete_Procedure($(this).attr("data-pid"), $("#panel-wrap").attr("data-sid"), function (data) {
                if (data.result == "SUCCESS") {
                    $(".ajax-procedure[data-procedureid=" + data.Id + "]").remove();
                } else {
                    ErrorAlert(data.errmsg)
                }
            });
        });

        //控制任务列表操作栏 
        $("#panel-wrap").on("click", ".tm-show-listmenu", function () {
            $(".tm-dropdown-menu").hide();
            if ($(this).hasClass("open")) {
                $(this).removeClass("open");
                $(this).parents(".ajax-procedure").find(".dropdown-parent").hide();
            } else {
                $(this).addClass("open");               
                $(this).parents(".ajax-procedure").find(".dropdown-parent").show();               
            }
            changepostion($(this).parents(".ajax-procedure").find(".procedure-dropdown-toggle"), $(this).parents(".ajax-procedure").find(".tm-dropdown-area"))
        });

        $("#tm_panel-container").on("click", function (e) {
            var _target = $(e.target);
            if (_target.closest(".tm-dropdown-area").length == 0) {
                $(".tm-dropdown-menu").hide();
            }
            if (_target.closest(".tm-dropdown-area").length == 0 && _target.closest(".procedure-dropdown-toggle").length == 0) {
                $(".tm-show-listmenu").removeClass("open");
            }
        });
        //修改任务列表名称
        $("#panel-wrap").on("click", ".btn-edit-procedure", function () {
            var _self = $(this);
            var pid = _self.attr("data-pid");
            $.ajax({
                url: "/TaskManagement/GetProcedureForm",
                type:"post",
                data: {
                    ProcedureId: pid,
                    SubjectId: $("#panel-wrap").attr("data-sid")
                },
                success: function (data) {
                    $(".tm-dropdown-menu").hide();
                    $(".dropdown-sub").html("");
                    _self.parents(".tm-dropdown-area").find(".dropdown-sub").html(data).show();
                    changepostion(_self.parents(".ajax-procedure").find(".procedure-dropdown-toggle"), _self.parents(".ajax-procedure").find(".tm-dropdown-area"))
                },
                error: function (data) {
                    ErrorAlert("请求失败。")
                }
            })

        });
        //显示任务详情
        $("#panel-wrap").on("click", ".tm_pop_assmodal", function () {
            var aid = $(this).find(".tm_item_right").attr("data-aid");
            GetAssignmentDetail(aid, $("#Edit-Assignment .modal-content"), function () {
                $('#Edit-Assignment').modal('show');
            });
        });

        //控制新建列表
        $("#btn_add-panel").on("click", function () {
            controlHidden()
        });
        $("#cancel-panel-write").on("click", function () {
            controlHidden()
        });
        function controlHidden(type) {
            $("#create-procedure-panel").removeClass("disabled");
            if ($("#add-panel-list").hasClass("hidden")) {
                $("#add-panel-list").removeClass("hidden");
                $("#add-panel-write").addClass("hidden");
            } else {
                $("#add-panel-write .form-group input").val("");
                $("#add-panel-list").addClass("hidden");
                $("#add-panel-write").removeClass("hidden");
            }
        }
        function changepostion(referencebox, movebox) {
            var referencepoint = referencebox.offset().left + referencebox.width() / 2;
            var moveboxhalfwidth = movebox.width() / 2;
            var moveleft = referencepoint - moveboxhalfwidth;
            if (moveleft < 0) {
                movebox.offset({ top: 160, left: referencebox.offset().left });
            } else {
                movebox.offset({ top: 160, left: moveleft });
            }
        }
    </script>
}



