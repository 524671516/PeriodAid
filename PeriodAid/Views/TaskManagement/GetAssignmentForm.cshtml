@model PeriodAid.Models.Assignment
@using (Html.BeginForm("CreateAssignment", "TaskManagement", FormMethod.Post, new { @id = "add_assignment_form", @class = "validate-form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    @Html.HiddenFor(m => m.ProcedureId)
    @Html.HiddenFor(m => m.SubjectId)
    <div class="form-group">
        @Html.TextBoxFor(m => m.AssignmentTitle, new { @class = "form-control", @placeholder = "任务名称" })
    </div>
    <div class="form-group">
        <label for="Deadline">截止期限</label>
        <input id="Deadline" name="Deadline" type="text" readonly class="form-control form_datetime_assignmentform" />
    </div>
    <div class="form-group">
        <label for="HolderId">负责人</label>
        @Html.DropDownListFor(m => m.HolderId, ViewBag.EmployeeDropDown as SelectList, new { @class = "form-control selectpicker dropdown", @id = "assignment_holder_straff" })
    </div>
    <div style="margin-bottom:15px;">
        <label for="assignment_col_straff">参与人</label>
        <select class="selectpicker form-control" id="assignment_col_straff" name="assignment_col_straff" multiple>
            @foreach (var depart in ViewBag.DepartmentList)
            {
                <optgroup label="@depart.DepartmentName">
                    @foreach (var straff in depart.EmployeeList)
                    {
                        <option value="@straff.Id">@straff.NickName</option>
                    }
                </optgroup>
            }
        </select>
    </div>
    <div class="text-right form-group"><a href="javascript:;" id="btn_assignementform-more" class="color-blue">填写更多&nbsp;&nbsp;<i class="fa fa-angle-double-down" aria-hidden="true"></i></a></div>
    <div id="tm-assignementform-more" style="display:none;">
        <div class="form-group">
            <textarea class="form-control" rows="2" placeholder="任务目标" id="Target" name="Target"></textarea>
        </div>
        <div class="form-group">
            <textarea class="form-control" rows="2" placeholder="任务描述" id="Remarks" name="Remarks"></textarea>
        </div>
        <div class="form-group">
            <label for="HolderId">优先级</label>
            <select name="Priority" id="Priority" class="form-control">
                <option value="1">一般</option>
                <option value="2">紧急</option>
            </select>

        </div>
    </div>
    <div class="text-right">
        <a class="btn btn-default" id="cancel-create-assignment">取消</a>
        <a class="btn btn-primary" id="create-assignment">确定</a>
    </div>
}
<script>
    //时间插件初始化
    CompleteTimeWidget(".form_datetime_assignmentform", "#add_assignment_form");

    //选择插件初始化
    $('#assignment_holder_straff').selectpicker({
        liveSearch: true,
        liveSearchPlaceholder: "搜索人员",
        width: "100%",
        dropupAuto: false,
    });
    $('#assignment_col_straff').selectpicker({
        liveSearch: true,
        liveSearchPlaceholder: "搜索人员",
        width: "100%",
        dropupAuto: false,
        title: "选择添加参与人"
    });
    //清除任务添加窗口
    $("#cancel-create-assignment").on("click", function () {
        $(".btn-get-assignmentform").removeClass("hidden");
        $(".tm_assignmentform-area").html("");
    });

    //展开更多操作
    $("#btn_assignementform-more").on("click", function () {
        $("#tm-assignementform-more").slideToggle("300");
    });

    //解决参与人和负责人回选方案(后端也已经判定)   可查看selectpicker对应的文档
    $('#assignment_col_straff').on('loaded.bs.select', function (e) {
        $('#assignment_col_straff').find("[value=" + $("#assignment_holder_straff").val() + "]").hide();
        $('#assignment_col_straff').selectpicker('refresh');
    });
    $("#assignment_holder_straff").on("change", function () {
        $('#assignment_col_straff').find("option").show();
        $('#assignment_col_straff').selectpicker('val', "");
        $('#assignment_col_straff').find("[value=" + $("#assignment_holder_straff").val() + "]").hide();
        $('#assignment_col_straff').selectpicker('refresh');
    });

    //新增任务验证
    $("#add_assignment_form").validate({
        debug: false,
        rules: {
            AssignmentTitle: {
                required: true,
                maxlength: 64
            }
        },
        //验证通过的正式提交函数
        submitHandler: function (form) {
            $(form).ajaxSubmit(function (data) {
                if (data.result == "SUCCESS") {
                    UnimportantAlert("任务创建成功。");
                    //更新列表
                    var _data = {
                        ProcedureId: data.id,
                        SubjectId: $("#panel-wrap").attr("data-sid")
                    }                                           //请求参数
                    /*获取任务*/
                    getAssignment("/TaskManagement/SubjectAssignment", _data, $(".ajax-procedure[data-procedureid=" + data.id + "]").find(".tm_panel-body"), function (data) {
                        dragtask("tm-list-show-" + _data.ProcedureId) //注册拖动事件
                        updateTaskNum(_data.SubjectId)  //跟新数据
                    }, function (data) {
                        /*失败回调*/
                    })
                } else {
                    ErrorAlert(data.result);
                    $("#create-assignment").removeClass("disabled");
                }
            })
        },
        errorClass: "has-error",
        //验证失败
        errorPlacement: function (error, element) {
            $("#create-assignment").removeClass("disabled");
        }
    });

    //新增任务提交
    $("#create-assignment").on("click", function () {
        if (!$(this).hasClass("disabled")) {
            $(this).addClass("disabled");
            $("#add_assignment_form").submit();
        }
    })
</script>