@model PeriodAid.Models.Assignment
<div class="modal-header" id="modal-header-assignment" data-aid="@Model.Id">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <a class="close dropdown-toggle" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown" href="#">更多<i class="fa fa-caret-down color-blue" aria-hidden="true" title="更多"></i></a>
    <h4 class="modal-title" id="Edit-AssignmentLabel">@Html.Encode(Model.AssignmentTitle)</h4>
    <div class="dropdown-menu tm_dropdown tm_dropdown_width">
        <ul>
            <li class="text-center"><strong class="color-blue">更多功能</strong></li>
            <li role="separator" class="divider"></li>
        </ul>
        <ul class="tm_dropdown_list">
            <li><a href="javascript:;" id="btn_del_assignment"><span class="color-red">删除任务</span></a></li>
        </ul>
    </div>
</div>
<div class="modal-body">
    @using (Html.BeginForm("Edit_Assignment_Detail", "TaskManagement", FormMethod.Post, new { @id = "edit_assignment_form", @class = "validate-form" }))
    {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.CompleteDate)
    @Html.HiddenFor(m => m.CreateTime)
    @Html.HiddenFor(m => m.SubjectId)
    @Html.HiddenFor(m => m.ProcedureId)
    @Html.HiddenFor(m => m.Status)
     <input type="hidden" name="AssignmentId" id="AssignmentId" value="@Model.Id"/>
    <div class="form-group">
        <label for="AssignmentTitle">任务名称</label>
        @Html.TextBoxFor(m => m.AssignmentTitle, new { @class = "form-control", @placeholder = "任务名称" })
    </div>
    <div class="form-group">
        <label for="Remarks">任务描述</label>
        @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control", @rows = "3", @placeholder = "任务描述" })
    </div>
    <div class="form-group">
        <label for="Target">任务目标</label>
        @Html.TextAreaFor(m => m.Target, new { @class = "form-control", @rows = "3", @placeholder = "任务目标" })
    </div>
    <div class="row">
        <div class="form-group col-md-6 input-append date">
            <label for="RemindDate">提醒时间</label>
            @if (Convert.ToDateTime(Model.RemindDate).ToString("yyyy-MM-dd") == "0001-01-01")
                {
                <input id="RemindDate" name="RemindDate" type="text" readonly class="form-control form_datetime" />
                }
                else
                {
                <input id="RemindDate" name="RemindDate" type="text" readonly class="form-control form_datetime" value="@Convert.ToDateTime(Model.RemindDate).ToString("yyyy-MM-dd HH:00")" />
                }

        </div>
        <div class="form-group col-md-6 input-append date">
            <label for="Deadline">截止期限</label>
            @if (Convert.ToDateTime(Model.Deadline).ToString("yyyy-MM-dd") == "0001-01-01")
                {
                <input id="Deadline" name="Deadline" type="text" readonly class="form-control form_datetime" />
                }
                else
                {
                <input id="Deadline" name="Deadline" type="text" readonly class="form-control form_datetime" value="@Convert.ToDateTime(Model.Deadline).ToString("yyyy-MM-dd HH:00")" />
                }
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-6">
            <label for="HolderId">负责人</label>
            @Html.DropDownListFor(m => m.HolderId, ViewBag.EmployeeDropDown as SelectList, new { @class = "form-control selectpicker dropdowm", @id = "tm_select_straff_assignment" })
        </div>
        <div class="form-group col-md-6">
            <label for="Priority">优先级</label>
            <select name="Priority" id="Priority" class="form-control">
                @if (Model.Priority == 1)
                {
                    <option value="1">一般</option>
                    <option value="2">紧急</option>
                }
                else
                {
                    
                    <option value="2">紧急</option>
                    <option value="1">一般</option>
                }
            </select>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 margin-bottom-10">
            <div class="tm_modal_list">
                <div class="tm_modal_list-header clear-float">
                    <div class="tm_modal_list-left">是否重复</div>
                    <div class="tm_modal_list-right">
                        @if (Model.Repeat==true)
                        {
                            <input type="checkbox" style="height:20px;width:20px;" id="Repeat" name="Repeat" checked value="@Model.Repeat.ToString()"/>
                        }
                        else
                        {
                            <input type="checkbox" style="height:20px;width:20px;" id="Repeat" name="Repeat"  value="@Model.Repeat.ToString()"/>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    }
    <!--SubTask Area-->
    <div class="row" id="modal_subtask_area">       
    </div>
    <!--SubTask Area End-->

    <!--Collaborator Area-->
    <div class="row" id="modal_collaborator_area">      
    </div>
    <!--Comment Area End-->
    <div class="row" id="modal_comment_area">      
    </div>
    <!--Comment Area End-->
</div>
<div class="modal-footer tm_modal-comment">
    <div class="tm_modal-comment-box row">
        <div class="col-md-10 tm_modal-comment-input">
@using (Html.BeginForm("Add_AssignmentComment", "TaskManagement", FormMethod.Post, new { @id = "add_comment_form", @class = "validate-form" }))
{
    @Html.AntiForgeryToken();
    <input type="hidden" name="AssignmentId" id="AssignmentId" value="@Model.Id"/>
    <input type="text" placeholder="请输入评论内容..." id="CommentContent" name="CommentContent"/>
}        
        </div>
        <div class="col-md-2 tm_modal-comment-control">
            <button type="button" class="btn btn-blue" id="btn_add_comment">发布</button>
        </div>
    </div>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-primary" id="btn_edit_assignment">保存</button>
</div>
<script type="text/javascript">
    $(document).keydown(function (event) {
        switch (event.keyCode) {
            case 13: return false;
        }
    });
    $('#tm_select_straff_assignment').selectpicker({
        liveSearch: true,
        liveSearchPlaceholder: "搜索人员",
        width: "100%",
        dropupAuto: false,
    });
    CompleteTimeWidget(".form_datetime");

    //获取子任务列表
    GetSubTaskListPartial($("#modal-header-assignment").attr("data-aid"), function (data) {
        $("#modal_subtask_area").html(data);
    })

    //获取合作人
    GetAssignment_CollaboratorPartial($("#modal-header-assignment").attr("data-aid"), function (data) {
        $("#modal_collaborator_area").html(data);
    })

    //获取评论
    GetComment($("#modal-header-assignment").attr("data-aid"), function (data) {
        $("#modal_comment_area").html(data);
    })

    //checkbox
    $("#Repeat").on("click", function () {
        if ($(this).val().toLowerCase() == "false") {
            $(this).val("true")
        } else {
            $(this).val("false")
        }
    });
    //修改任务验证
    $("#edit_assignment_form").validate({
        debug: false,
        rules: {
            AssignmentTitle: {
                required: true,
                maxlength: 128
            }
        },
        //验证通过的正式提交函数
        submitHandler: function (form) {
            $(form).ajaxSubmit(function (data) {
                if (data.result == "SUCCESS") {
                    UnimportantAlert("任务修改成功");
                    $("#btn_edit_assignment").removeClass("disabled");
                    $('#Edit-Assignment').modal('hide');
                    GetAssignment(data.id, $("#panel-wrap").attr("data-sid"), $(".ajax-procedure[data-procedureid=" + data.id + "]").find(".tm_panel-body"));
                } else {
                    ErrorAlert(data.errmsg);
                    $("#btn_edit_assignment").removeClass("disabled");
                }
            })
        },
        errorClass: "has-error",
        //验证失败
        errorPlacement: function (error, element) {
            $("#btn_edit_assignment").removeClass("disabled");
        }
    });
    //修改任务的提交
    $("#btn_edit_assignment").on("click", function () {
        if (!$(this).hasClass("disabled")) {
            $(this).addClass("disabled")
            $("#edit_assignment_form").submit();
        }
    });
    //删除任务
    $("#btn_del_assignment").on("click", function () {
        var data_aid = $(this).parent().parent().parent().parent().attr("data-aid");
        CustomConfirm("删除此任务的同时将删除其子任务，请确认是否删除?", function () {
            Delete_Assignment(data_aid, function (data) {
                if (data.result == "SUCCESS") {
                    GetAssignment(data.Id, $("#panel-wrap").attr("data-sid"), $(".ajax-procedure[data-procedureid=" + data.Id + "]").find(".tm_panel-body"));
                    UnimportantAlert("删除任务成功。")
                    $('#Edit-Assignment').modal('hide');
                    $.ajax({
                        url: "/TaskManagement/GetProcedureJsonInfo",
                        type: "post",
                        data: {
                            SubjectId: $("#panel-wrap").attr("data-sid")
                        },
                        success: function (data) {
                            var len = data.data.length;
                            $(".ajax-procedure").each(function () {
                                for (i = 0; i < len; i++) {
                                    if (data.data[i].ProcedureId == $(this).attr("data-procedureid")) {   
                                        $(this).find(".total-num").html(data.data[i].TotalNum)
                                        $(this).find(".num").html(data.data[i].FinishNum)
                                    }
                                }
                            })
                        }
                    })
                } else {
                    UnimportantAlert(data.errmsg)
                }
            })
        })
    });
    //添加评论
    $("#btn_add_comment").on("click", function () {
        if (!$(this).hasClass("disabled")) {
            $(this).addClass("disabled");
            if ($("#CommentContent").val() != "") {
                $("#add_comment_form").ajaxSubmit(function (data) {
                    if (data.result == "SUCCESS") {
                        $("#CommentContent").val("");
                        $("#btn_add_comment").removeClass("disabled");
                        GetComment($("#modal-header-assignment").attr("data-aid"), function (data) {
                            $("#modal_comment_area").html(data);
                        })
                        UnimportantAlert(data.msg);
                    } else {
                        $("#btn_add_comment").removeClass("disabled");
                        ErrorAlert(data.errmsg);
                    }
                })
            } else {
                $(this).removeClass("disabled");
            }
        }
    });
    function GetComment(AssignmentId,Callback) {
        $.ajax({
            url: "/TaskManagement/Assignment_CommentPartial",
            data: {
                AssignmentId: AssignmentId
            },
            success: function (data) {
                typeof Callback && Callback(data);
            },
            error: function () {
                ErrorAlert("请求失败。");
            }
        })
    }
</script>
