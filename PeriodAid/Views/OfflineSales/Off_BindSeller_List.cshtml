@model IEnumerable<PeriodAid.Models.Off_Membership_Bind>

@{
    ViewBag.Title = "人员绑定";
    Layout = "~/Views/Shared/_OffLayout.cshtml";
    var query = Request.Url.Query;
    string result = "";
    if (query.IndexOf("query=") != -1)
    {
        var start = query.Substring(query.IndexOf("query="), query.Length - query.IndexOf("query="));
        var end = start.Substring(0, start.IndexOf("&") == -1 ? start.Length : start.IndexOf("&"));
        result = end.Substring(6, end.Length - 6);
    }
}
@section page{
    4
    }
<div class="row">
    <div class="col-xs-8">
    </div>
    <div class="col-xs-4">
        <div class="input-group">
            <input type="text" class="form-control input-sm" placeholder="搜索销售员" id="search-query" value="@Html.Encode(result)">
            <span class="input-group-btn">
                <button class="btn btn-default btn-sm" type="button" id="search-btn"><i class="fa fa-search"></i></button>
            </span>
        </div>
    </div>
</div>

<br />
<table class="table table-condensed table-striped">
    <tr>
        <th>
            姓名
        </th>
        <th>
            联系方式
        </th>
        <th>
            注册时间
        </th>
        <th>
            绑定促销员姓名
        </th>
        <th>绑定促销员所属门店</th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.NickName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Mobile)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.ApplicationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Off_Seller.Name)
            </td>
            <td>

                @Html.Encode(item.Off_Seller == null ? "" : item.Off_Seller.Off_Store.StoreName)
            </td>
            <td>
                @Html.ActionLink("修改", "Off_BindSeller", new { id = item.Id }, new { @class = "btn btn-sm btn-info edit-button" })
                @if (!item.Bind)
                {
                    @Html.ActionLink("设置管理员", "Off_UpdateManager", new { id = item.Id }, new { @class = "btn btn-sm btn-danger manager-button" })
                    @Html.Encode(" ")
                    @Html.ActionLink("设置区域", "Off_Manager_AddStore", new { id=item.Id}, new { @class="btn btn-sm btn-primary"})
                }
            </td>
        </tr>
    }

</table>
<div class="modal fade" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">修改促销员</h4>
            </div>
            <div class="modal-body" id="editcontent">

            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<script>
    $(".edit-button").click(function () {
        var link_url = $(this).attr("href");
        $.ajax({
            url: link_url,
            success: function (data) {
                $("#editcontent").html(data);
                $('#myModal').modal()
            }
        });
        return false;
    });
    $(".manager-button").click(function () {
        var link_url = $(this).attr("href");
        var result = confirm("是否设置为管理员");
        if (result == "SUCCESS") {
            $.ajax({
                url: link_url,
                success: function (data) {
                    if (data == "SUCCESS");
                    window.location.reload();
                }
            });
        }
        return false;
    });
    $(function () {
        $("#search-query").val(decodeURIComponent($("#search-query").val()));
        $("#search-btn").click(function () {
            var cuxa = $("#search-query").val();
            var query = "/OfflineSales/Off_BindSeller_List?query=" + cuxa;
            window.location.href = query;
            //$.ajax({
            //    url:query,
            //    data:{
            //        query:
            //    },
            //    success: function (data) {
            //        $("#list-container").html()
            //    }
            //})
        });
    })
    function getUrlParam(name) {
        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); //构造一个含有目标参数的正则表达式对象
        var r = window.location.search.substr(1).match(reg);  //匹配目标参数
        if (r != null) return unescape(r[2]); return null; //返回参数值
    }
</script>
