@model PeriodAid.Models.Off_Store

@using (Html.BeginForm("Off_CreateStore", "OfflineSales", FormMethod.Post, new { @id = "ajaxaddform" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            <label class="control-label col-md-3">门店名称</label>
            @*@Html.LabelFor(model => model.StoreName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-9">
                @Html.EditorFor(model => model.StoreName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StoreName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">渠道</label>
            @*@Html.LabelFor(model => model.StoreName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-9">
                @Html.EditorFor(model => model.StoreSystem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StoreSystem, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">区域</label>
            <div class="col-md-9"> 
                <select class="form-control" data-val="true" data-val-length="字段 Region 必须是最大长度为 20 的字符串。" data-val-length-max="20" id="Region" name="Region">
                    <option value="">- 请选择区域 -</option>
                    <option value="华东">华东</option>
                    <option value="外区">外区</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3">经销商</label>
            @*@Html.LabelFor(model => model.Distributor, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-9">
                @Html.EditorFor(model => model.Distributor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Distributor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3">地址</label>
            @*@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-9">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3">经度</label>
            @*@Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-9">
                @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3">纬度</label>
            @*@Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-9">
                @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.UploadTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UploadTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UploadTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UploadUser, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UploadUser, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UploadUser, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="保存" id="submit-btn" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<script>
    $(function () {
        $("#submit-btn").click(function () {
            $(this).attr("disabled", "disabled").val("添加中...");
            setTimeout(formsubmit, 1000);
            
            return false;
        })
        
    });
    function formsubmit() {
        $('#ajaxaddform').ajaxSubmit(function (data) {
            if (data == "SUCCESS") {
                $('#addModal').modal('hide');
                alert("添加成功");
                $.ajax({
                    url: "/OfflineSales/Off_Store_ajaxlist",
                    success: function (data) {
                        ///setTimeout(3000);
                        $("#list-container").html(data);
                    }
                });
            }
            else {
                $("#addcontent").html(data);
            }
        });
    }
    function refresh_page() {

    }
</script>
