@model PeriodAid.Models.Off_Manager_Announcement

@{
    ViewBag.Title = "Off_Manager_Announcement_Create";
    Layout = "~/Views/Shared/_OffLayout.cshtml";
}
@section page{
    6
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-3">
            <select multiple id="selectList_add" class="form-control input-sm" style="height:240px; font-size:1em;"></select>

            <div class="container" style="margin-top:5px;margin-bottom:5px;">
                <a class="btn btn-default" href="javascript:;" id="add-btn">添加</a>
                <a class="btn btn-default" href="javascript:;" id="remove-btn" style="margin-left:40px;">移除</a>
            </div>
            <select multiple id="selectList_rem" class="form-control input-sm" style="height:240px; font-size:1em;"></select>
        </div>
        <div class="col-md-9">
            <div class="row">
                <div class="col-md-5">
                    <div class="input-group">
                        <div class="input-group-addon "><small>开始时间</small></div>
                        <input type="text" class="input-sm form-control start-date" value="@Model.StartTime"/>
                    </div>
                </div>
                <div class="col-md-5">
                    <div class="input-group">
                        <div class="input-group-addon"><small>结束时间</small></div>
                        <input type="text" class="input-sm form-control end-date" value="@Model.FinishTime" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="input-group col-md-12">
                    <div class="input-group-addon"><small>工作列表</small></div>
                    <select id="selectList_list" class="form-control input-sm" style="width:"></select>
                </div>
            </div>




            @*<div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">

                    @Html.LabelFor(model => model.ManagerUserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ManagerUserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ManagerUserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                        
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FinishTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FinishTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FinishTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubmitUser, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SubmitUser, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SubmitUser, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubmitTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SubmitTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SubmitTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="提交" class="btn btn-default" />
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}
<script>
    $(function () {

        $(".start-date").datepicker({
            dateFormat: 'yy-mm-dd'
        });
        $(".end-date").datepicker({
            dateFormat: 'yy-mm-dd'
        });
        var link_url = "/OfflineSales/Off_Manager_List_Ajax"
        $.ajax({
            url: link_url,
            type: "post",
            success: function (data) {
                if (data.result == "SUCCESS") {
                    for (var i = 0; i < data.managerlist.length; i++) {
                        $("#selectList_add").append("<option value='" + data.managerlist[i].UserName + "' >" + data.managerlist[i].NickName + "</option>");

                    }
                }
            }
        })
        
    });
    $("#add-btn").click(function () {
        var selectvalue = $("#selectList_add").val()+"";
        var managerArray = selectvalue.split(',');
        for (var i = 0; i < managerArray.length; i++) {
            var optionitem = "<option value=\"" + managerArray[i] + "\">" + $("option[value='" + managerArray[i] + "']").text() + "</option>";
            //alert(optionitem);
            $("#selectList_rem").append(optionitem);
            $("#selectList_add option[value='" + managerArray[i] + "']").remove();
        }
        //alert(selectlist);

    });
    $("#remove-btn").click(function () {
        var selectRem = $("#selectList_rem").val() + "";
        var arry_rem = selectRem.split(",");
        for (var i = 0; i < arry_rem.length; i++) {
            var option_con = "<option value=\"" + arry_rem[i] + "\">" + $("option[value='" + arry_rem[i] + "']").text() + "</option>";
            $("#selectList_rem option[value='" + arry_rem[i] + "']").remove();
            $("#selectList_add").append(option_con)
            
        }
    })
    
    
</script>



