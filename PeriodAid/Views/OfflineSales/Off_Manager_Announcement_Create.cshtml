@model PeriodAid.Models.Off_Manager_Announcement

@{
    ViewBag.Title = "Off_Manager_Announcement_Create";
    Layout = "~/Views/Shared/_OffLayout.cshtml";
}
@section page{
    6
    }

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-3">
            <select multiple id="selectList_add" class="form-control input-sm" style="height:240px; font-size:1em;">

            </select>

            <div class="container" style="margin-top:5px;margin-bottom:5px;">
                <a class="btn btn-default" href="javascript:;" id="add-btn">添加</a>
                <a class="btn btn-default" href="javascript:;" id="remove-btn" style="margin-left:40px;">移除</a>
            </div>
            <select multiple id="selectList_rem" class="form-control input-sm" style="height:240px; font-size:1em;">
          
            </select>
        </div>
        <div class="col-md-9">
            <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ManagerUserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagerUserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagerUserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinishTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinishTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FinishTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubmitUser, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubmitUser, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubmitUser, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubmitTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubmitTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubmitTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
        </div>
    </div>
}
<script>
    $(function () {
        var link_url = "/OfflineSales/Off_Manager_List_Ajax"
        $.ajax({
            url: link_url,
            type: "post",
            success: function (data) {
                if (data.result == "SUCCESS") {
                    for (var i = 0; i < data.managerlist.length; i++) {
                        $("#selectList_add").append("<option value='" + data.managerlist[i].UserName + "' >" + data.managerlist[i].NickName + "</option>");

                    }
                }
            }
        })
    });
    $("#add-btn").click(function () {
        var addlist = $("#selectList_add").val() + "";
        var currentlist = $("#selectList_rem").val() + "";
        var arr_add = addlist.split(",");
        var arr_current = currentlist.split(",");
        for (var i = 0; i < addlist.length; i++) {
            if (arr_current.indexOf(arr_add[i]) == -1) {
                $.ajax({
                    url: "/OfflineSales/Off_Manager_List_Ajax=" + addlist[i],
                    success: function (data) {
                        $("#selectList_rem").append("<option value='" + data.managerlist[i].UserName + "' >" + data.managerlist[i].NickName + "</option>");
                        refresh_list();
                    }
                });

            }
        }
    });
</script>    
    


