@model PeriodAid.Models.SP_Product
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h2>新增产品信息</h2>
</div>
<div class="modal-body">
    @using (Html.BeginForm("AddProductPartial", "SalesProcess", FormMethod.Post, new { @id = "add-product-form" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <label class="col-md-2 control-label">品牌</label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Brand_Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Brand_Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">产品名称</label>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Item_Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Item_Name, "", new { @class = "text-danger" })
                </div>

                <label class="col-md-2 control-label">供应商</label>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Supplier_Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Supplier_Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">零售价</label>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Purchase_Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Purchase_Price, "", new { @class = "text-danger" })
                </div>
                <label class="col-md-2 control-label">供货价</label>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Supply_Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Supply_Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">

                <label class="col-md-2 control-label">重量(/克)</label>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Product_Weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product_Weight, "", new { @class = "text-danger" })
                </div>
                <label class="col-md-2 control-label">箱规</label>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Carton_Spec, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Carton_Spec, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="form-group">
                <label class="col-md-2 control-label">系统编码</label>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.System_Code, new { htmlAttributes = new { @class = "form-control", @placeholder= "选填" } })
                    @Html.ValidationMessageFor(model => model.System_Code, "", new { @class = "text-danger" })
                </div>
                <label class="col-md-2 control-label">产品编码</label>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Item_Code, new { htmlAttributes = new { @class = "form-control", @placeholder = "选填" } })
                    @Html.ValidationMessageFor(model => model.Item_Code, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">商品简称</label>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Item_ShortName, new { htmlAttributes = new { @class = "form-control", @placeholder = "选填" } })
                    @Html.ValidationMessageFor(model => model.Item_ShortName, "", new { @class = "text-danger" })
                </div>
                <label class="col-md-2 control-label">条形码</label>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Bar_Code, new { htmlAttributes = new { @class = "form-control", @placeholder = "选填" } })
                    @Html.ValidationMessageFor(model => model.Bar_Code, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">产品状态</label>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.Product_Status, ViewBag.productStatus as SelectList ,new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Product_Status, "", new { @class = "text-danger" })
                </div>
                <label class="col-md-2 control-label">产品类别</label>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.ProductType_Id, ViewBag.productType as SelectList, new { @class = "form-control"})
                    @Html.ValidationMessageFor(model => model.ProductType_Id, " ", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-9">
                    <input type="submit" value="新增" class="btn btn-default" id="add-submit" name="add-submit" />
                </div>
            </div>

        </div>
    }
</div>
<script>
    $(function () {
        $("#add-product-form").validate({
            debug: true,
            rules: {
                Item_Name: {
                    required: true,
                    minlength: 2
                },
                Brand_Name: {
                    required: true,
                    minlength: 2
                },
                Purchase_Price: {
                    required: true,
                    number:true
                },
                Supply_Price: {
                    required: true,
                    number:true
                },
                Product_Weight: {
                    required: true,
                    number:true
                },
                Carton_Spec: {
                    required: true,
                    number:true
                },
                Supplier_Name: {
                    required: true,
                    minlength:2
                }
            },
            messages: {
                Item_Name: {
                    required: "名称是必须的",
                    minlength: 2
                },
                Brand_Name: {
                    required: "品牌是必须的",
                    minlength: 2
                },
                Purchase_Price: {
                    required: "零售价是必须的",
                    number: "请注意格式 如 19"
                },
                Supply_Price: {
                    required: "供货价是必须的",
                    number: "请注意格式 如 19"
                },
                Product_Weight: {
                    required: "重量是必须的",
                    number: "请注意格式 如 120"
                },
                Carton_Spec: {
                    required: "箱规是必须的",
                    number: "请注意格式 如 24"
                },
                Supplier_Name: {
                    required: "供应商是必须的",
                    minlength: 2
                }
            },
            //验证通过的正式提交函数
            submitHandler: function (form) {
                $("#add-submit").attr("disabled", true)
                $(form).ajaxSubmit(function (data) {
                    if (data.result == "SUCCESS") {
                        alert("添加成功！");
                        $("#add-submit").removeAttr("disabled")
                        $("#myModal").modal('hide')
                        $.ajax({
                            url: "/SalesProcess/ProductListPartial",
                            data: {
                                productType: $(".product-list-li.active").children(".type-btn").attr("data-id"),
                                query: $("#storage-product-query").val()
                            },
                            success: function (data) {
                                $("#product_list_content").html(data)
                                $('.modal-backdrop.in').remove()
                                $('body').removeClass('modal-open')
                            }
                        });
                    } else if (data.result == "UNAUTHORIZED") {
                        errorAlert('产品已存在!')
                        $("#add-submit").removeAttr("disabled")
                    } else {
                        $("#add-submit").removeAttr("disabled")
                        errorAlert(data.errmsg)
                    }
                })
            },
            errorClass: "has-error",
            //验证失败
            errorPlacement: function (error, element) {
                $("#add-submit").removeAttr("disabled")
                error.appendTo(element.parent())
            }
        })
    })
</script>   